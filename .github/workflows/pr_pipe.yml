name: PR Pipeline

on:
  pull_request:
    branches:
      - master

jobs:

  php_checks:
    name: PHP Syntax Checks | PHP ${{ matrix.php }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ '5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0' ]
    steps:
      - name: Clone Code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      - name: PHP Syntax Checks
        run: make phpcheck -B

  php_min:
    name: PHP 5.6 Compatibility
    needs: php_checks
    runs-on: ubuntu-latest
    steps:
      - name: Clone Code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.2

      - name: Install Dependencies
        run: make dev -B

      - name: PHP Checks
        run: make phpmin -B

  # ------------------------------------------------------------------------------------------------------------------------

  unit_tests:
    name: Unit Tests | PHP ${{ matrix.php }}
    needs: php_min
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Shopware Composer install only allows a few PHP versions due to this:
        # mpdf/mpdf v7.1.9 requires php ^5.6 || ~7.0.0 || ~7.1.0 || ~7.2.0 || ~7.3.0
        # also the PHPUnit versions are not compatible between 5.* and >= 7.*
        # so lets only do a few >= 7.2 for now
        php: [ '7.2', '7.3' ]
    steps:
      - name: Clone Code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      - name: Install Dependencies
        run: make dev -B

      - name: Run PHPUnit
        run: make test -B

  # ------------------------------------------------------------------------------------------------------------------------

  phpstan:
    name: PHPStan Analyser
    needs: unit_tests
    runs-on: ubuntu-latest
    steps:

      - name: Clone Code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.2

      - name: Install Dependencies
        run: make dev -B

      - name: Run PHPStan
        run: make stan -B

  phpcsfixer:
    name: PHP CS Fixer
    needs: phpstan
    runs-on: ubuntu-latest
    steps:

      - name: Clone Code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.2

      - name: Install Dependencies
        run: make dev -B

      - name: Run PHP CS Fixer
        run: make csfix -B

  # ------------------------------------------------------------------------------------------------------------------------

  integration:
    name: Integration Tests | Shopware ${{ matrix.shopware }}
    needs: phpcsfixer
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shopware: [ '5.3.0', '5.6.4', '5.6.8', '5.6.9' ]
    steps:

      - name: Clone Code
        uses: actions/checkout@v2

      - name: Start Docker
        run: |
          docker run --rm -p 80:80 --name shop -d dockware/play:${{ matrix.shopware }}
          sleep 30
          docker logs shop

      - name: Upload into Docker
        run: docker cp $(pwd)/. shop:/var/www/html/custom/plugins/MollieShopware

      - name: Install Plugin
        run: |
          docker exec shop bash -c 'php bin/console sw:plugin:refresh'
          docker exec shop bash -c 'php bin/console sw:plugin:install --activate MollieShopware'
          docker exec shop bash -c 'php bin/console sw:cache:clear'